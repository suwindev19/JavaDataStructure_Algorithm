package kickStart_April;

import java.util.Scanner;
// Greedy algorithm
/*
Proof by contradiction - Check it out
Proof that greedy solution works.
G := {g1, ..., gk} a multiset generated by the greedy solution
O := {O1, ..., Om}, an optimal multiset
sigma of G = sum of elements of G
sigma of O = sum of elements of O
e := ak+1
A, G and O are sorted in non-descending order
 */
public class Allocation {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int T = sc.nextInt();
        for(int t = 1; t <=T ; t++){
            int N = sc.nextInt();
            int B = sc.nextInt();
            int[] houses = new int[N];
            // Add house prices into houses array
            for(int i = 0; i < N; i++){
                houses[i] = sc.nextInt();
            }
            // Sort the houses array - Insertion sort
            for (int i = 1; i < houses.length;i++){
                for(int j = i -1; j < i; j++){
                    if (houses[i] < houses[j]){
                        int temp = houses[i];
                        houses[i] = houses[j];
                        houses[j] = temp;
                    }
                }
            }
            int max = 0;
            for(int i = 0; i < N ; i++) {
                if (houses[i] <= B) {
                    B = B - houses[i];
                    max += 1;
                }
            }
            N--; // each house sold
            T--;
            System.out.println("Case #" + t + ": "+ max);
        }

    }
}
